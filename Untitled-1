  while (set.size > 0) {
    maxPos = null;
    inner: for (let i = road.length - 1; i >= 0; i--) {
      const current = road[i];
      const speed = speeds[current];
      if (current === null) continue inner;
      const reach = i + speed;
      
      // If car reaches target directly and no maxPos set, count it as a fleet
      if (reach >= target && maxPos === null) {
        set.delete(current.toString());
        count++;
        road[i] = null;
        continue inner;
      }
      
      const futurePosition = maxPos
        ? Math.min(Math.min(reach, target), maxPos)
        : Math.min(reach, target);
        
      let nextSpeed = speeds[road[futurePosition]];
      
      if (nextSpeed === undefined) {
        road[futurePosition] = current;
      } else if (speed > nextSpeed) {
        // Car joins existing fleet
        set.delete(current.toString());
      }
      
      if (futurePosition === target) {
        set.delete(current.toString());
      }
      
      maxPos = futurePosition;  // Remove the else condition here
      road[i] = null;
    }
    
    // Only count as new fleet if there's actually a car at the end
    if (road[road.length - 1] !== null) {
      set.delete(road[road.length - 1].toString());
      count++;
      road[road.length - 1] = null;
    }
  } 
